<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>xbuf</title>
    <link>http://xbuf.github.io/</link>
    <description>Recent content on xbuf</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 28 Mar 2015 18:34:43 +0100</lastBuildDate>
    
	<atom:link href="http://xbuf.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>http://xbuf.github.io/about/</link>
      <pubDate>Sat, 28 Mar 2015 18:34:43 +0100</pubDate>
      
      <guid>http://xbuf.github.io/about/</guid>
      <description>xbuf is an exchange format usable to store scene, models, animations, &amp;hellip; in file or to edit scene over network. It takes inspiration from :
 OpenGEX : as data to managed, and doc fragment I copied glTF : some discussions and some goals blender api : how blender manages data Entity-Component-System (ECS), RDF : as way to extends and to link data  xbuf is a binary format using Protocol Buffers (aka protobuf) to generate source code for java, C++, python,&amp;hellip; to read and write it.</description>
    </item>
    
    <item>
      <title>Setup Blender</title>
      <link>http://xbuf.github.io/tuto_jme01/</link>
      <pubDate>Sun, 18 Oct 2015 00:00:00 +0100</pubDate>
      
      <guid>http://xbuf.github.io/tuto_jme01/</guid>
      <description>The quickest way to give a try : blender_io_xbuf
jme3_xbuf_viewer Install a pre-configured application ready to connect to blender.
 install java 8 download jme3_xbuf_viewer-201510171736.tgz + unarchive + run ./launch (or launch.exe)  On Blender 2.74+  click the Download ZIP button on blender_io_xbuf install add-on into blender  File &amp;gt; User Preferences ... &amp;gt; Addons &amp;gt; Install from file ... select the downloaded zip file enable the plugin Import-Export: Xbuf Exporter &amp;amp; Render Engine (check the checkbox)  open or create a model select Xbuf Render in the render engine combobox (top) check the render properties (eg: Xbuf &amp;gt; assets_path the directory where to export images, &amp;hellip;) in the 3D view select viewport shading &amp;gt; rendered could take/freeze a moment to transfer the initial data.</description>
    </item>
    
    <item>
      <title>Get started</title>
      <link>http://xbuf.github.io/get_started/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0100</pubDate>
      
      <guid>http://xbuf.github.io/get_started/</guid>
      <description>In the tutoriel bellow I use jME3 as render engine, but xbuf is not limited to jME3. It&amp;rsquo;s just the first target engine I work on.
Level 1 The quickest way to give a try : blender_io_xbuf + jme3_xbuf_viewer.
jme3_xbuf_viewer Install a pre-configured application ready to connect to blender.
 install java 8 download jme3_xbuf_viewer-201510171736.tgz + unarchive + run ./launch (or launch.exe)  On Blender 2.74+  click the Download ZIP button on blender_io_xbuf install add-on into blender  File &amp;gt; User Preferences .</description>
    </item>
    
    <item>
      <title>FAQ</title>
      <link>http://xbuf.github.io/faq/</link>
      <pubDate>Wed, 18 Feb 2015 00:00:00 +0100</pubDate>
      
      <guid>http://xbuf.github.io/faq/</guid>
      <description>What &amp;hellip; What are the units, coordinate system ?  Coordinate system : Right Handled  object : Y up, Z forward, X left camera : Y up, Z lookAt direction, X left orthogonal-axes uniform axis unit front face: CCW (counter-clock-wise), back face: CW  Distance unit : meter (float) Time unit : millisecond (int32) Angle unit : radian (float)  I try to collect same data for game engine, tools, to help create importer/exporter.</description>
    </item>
    
    <item>
      <title>Extensions List</title>
      <link>http://xbuf.github.io/extensions-list/</link>
      <pubDate>Mon, 16 Feb 2015 00:00:00 +0100</pubDate>
      
      <guid>http://xbuf.github.io/extensions-list/</guid>
      <description>   index name description .proto (optional)     500 custom_params an extension to store custom parameters, properties, very type less custom_params.proto   501 animations_kf an extension to store basic keyframes animations animations_kf.proto    </description>
    </item>
    
    <item>
      <title>Motivations</title>
      <link>http://xbuf.github.io/motivations/</link>
      <pubDate>Mon, 16 Feb 2015 00:00:00 +0100</pubDate>
      
      <guid>http://xbuf.github.io/motivations/</guid>
      <description>Why ?  .proto is used as spec and to generate generator/parser for several languages. No need to write your own (you can if you want). And tool, game, engine spend less time on creating generator/parser. Developper only need to create adapter, converter into their own format (far easier than creating generator + parser). protobuf have support for lot of programming language (my priority order):  python : blender exporter, realtime renderer is my first target as tool.</description>
    </item>
    
    <item>
      <title>Tools</title>
      <link>http://xbuf.github.io/tools/</link>
      <pubDate>Mon, 16 Feb 2015 00:00:00 +0100</pubDate>
      
      <guid>http://xbuf.github.io/tools/</guid>
      <description>Existing Tools, Libraries, &amp;hellip; Game Engine integration  [jme3_ext_remote_editor]() for jMonkeyEngine, allow to receive commands and datas over socket to modify the scene. It also include a Loader for &amp;lsquo;.xbuf&amp;rsquo;  3D Tools integration Protobuf tools  a list of languages and utilities for protobuf is available at Third-Party-Add-ons google, bing, &amp;hellip; ;-)  Ideas for Tools Checker  in a collection of datas (.xbuf) : verify that every ref points to existing id.</description>
    </item>
    
    <item>
      <title>API</title>
      <link>http://xbuf.github.io/api/</link>
      <pubDate>Sun, 15 Feb 2015 00:00:00 +0100</pubDate>
      
      <guid>http://xbuf.github.io/api/</guid>
      <description>It&amp;rsquo;s a generated api from *.proto. IMHO, the files *.proto are more readable. And always more uptodate.
 Protocol Documentation Table of Contents  animations_kf.proto  AnimationKF BezierParams Clip ColorKF KeyPoints QuaternionKF TransformKF Vec3KF KeyPoints.InterpolationFct  custom_params.proto  CustomParam CustomParamList  cmds.proto  ChangeAssetFolders Cmd DeleteData SetEye SetEye.ProjMode  datas.proto  Attenuation AttenuationInverse AttenuationInverseSquare AttenuationLinear AttenuationSmooth Bone Color Data FloatBuffer Geometry IndexArray Light Mat4 Material Mesh Quaternion Relation Skeleton TObject Texture Texture2DInline Transform UintBuffer Vec2 Vec3 Vec4 VertexArray Light.</description>
    </item>
    
  </channel>
</rss>